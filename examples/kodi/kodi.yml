# Set the IFTTT webhook with something like
# http://yourdomain:port/ifttt?phrase={{TextField}}&lang=en

- name: "Incoming IFTTT request"
  pipe:
  - name: IFTTT Webhook endpoint
    match:
      string: =In.URL.Path
      value: /ifttt

  - name: Must be HTTP POST
    match:
      string: =In.Method
      value: POST

  - name: Parse JSON body
    body:
      mime: application/json
      type: json
    register: body

  - name: JSON payload must contain the token set in IFTTT
    match:
      string: = R.body.payload.token
      value: secretToken

  - name: Get lang query param
    variable:
    - lang: '= In.URL.Query()|lang[0]'
  - name: Read strings corresponding to lang param
    readfile:
      yaml: '="examples/kodi/kodi."+V.lang+".yml"'
    register: strings

  - name: Voices for Google Home TTS
    variable:
      - voices: # https://cloud.google.com/text-to-speech/docs/voices
          fr:
            - fr-FR
            - fr-FR-Standard-C
          en:
            - en-US
            - en-US-Standard-G

  - name: Set default values
    default:
      match: # Phrase from Google Assistant sent by IFTTT
        string: '= In.URL.Query()|phrase[0]'
      jsonrpc: # Kodi API params
        url: http://192.168.0.32:8080/jsonrpc
        basic_auth:
          username: kodi
          password: mykodipasswd
      chromecast: # Used to give feedback to commands
        # Google Home IP addr
        addr: 192.168.3.9
        # TTS params
        language_code: '=V.voices[V.lang][0]'
        voice_name: '=V.voices[V.lang][1]'
        # Credentials to use Google API service for TTS
        google_service_account: "~/.credentials/google_service_account.json"

# We use one sub-pipe per action to be done:

  - name: Mute sound
    pipe:
    - name: Match a phrase asking to mute sound
      match:
        regexp:  =R.strings.content.mute.regexp
      register: mute
    - name: Mute sound on Kodi
      jsonrpc:
        procedure: Application.SetMute
        params:
          mute: toggle
    result: "= !R.mute.result" # Stop here if the phrase was matched


  - name: Play/Pause
    pipe:
    - name: Match a phrase asking to play or pause
      match:
        regexp:  =R.strings.content.playpause.regexp
      register: playpause
    - name: Playpause Kodi video
      jsonrpc:
        procedure: Player.PlayPause
        params:
          playerid: 1 # video player
      result: =true # in case no video was playing
    - name: Playpause Kodi audio
      jsonrpc:
        procedure: Player.PlayPause
        params:
          playerid: 0 # audio player
    result: "= !R.playpause.result" # Stop here if the phrase was matched


  - name: Stop
    pipe:
    - name: Match a phrase asking to stop
      match:
        regexp:  =R.strings.content.stop.regexp
      register: stop
    - name: Stop Kodi video
      jsonrpc:
        procedure: Player.Stop
        params:
          playerid: 1 # video player
      result: =true # in case no video was playing
    - name: Stop Kodi audio
      jsonrpc:
        procedure: Player.Stop
        params:
          playerid: 0 # audio player
    result: "= !R.stop.result" # Stop here if the phrase was matched


  - name: Scan library
    pipe:
    - name: Match a phrase asking to scan library
      match:
        regexp:  =R.strings.content.scan_library.regexp
      register: scan

    - name: Scan library on Kodi
      jsonrpc:
        procedure: VideoLibrary.Scan

    - name: Log command
      log:
        msg: '=R.strings.content.scan_library.feedback'
    - name: Acknowledge command
      chromecast:
        tts: '=R.strings.content.scan_library.feedback'

    result: "= !R.scan.result" # Stop here if the phrase was matched

  - name: Clean library
    pipe:
    - name: Match a phrase asking to clean library
      match:
        regexp:  =R.strings.content.clean_library.regexp
      register: clean

    - name: Clean library on Kodi
      jsonrpc:
        procedure: VideoLibrary.Clean

    - name: Acknowledge command
      chromecast:
        tts: '=R.strings.content.clean_library.feedback'

    result: "= !R.clean.result" # Stop here if the phrase was matched


  - include: play_episode.yml

  - include: play_song.yml

  - include: play_album.yml

  - include: play_artist.yml

  - include: play_genre.yml

  - include: play_movie.yml

// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	ctx "github.com/jsautret/go-api-broker/ctx"
	conf "github.com/jsautret/go-api-broker/internal/conf"

	mock "github.com/stretchr/testify/mock"
)

// Plugin is an autogenerated mock type for the Plugin type
type Plugin struct {
	mock.Mock
}

// Call provides a mock function with given fields: _a0, _a1
func (_m *Plugin) Call(_a0 *ctx.Ctx, _a1 *conf.Params) bool {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*ctx.Ctx, *conf.Params) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *Plugin) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Result provides a mock function with given fields:
func (_m *Plugin) Result() ctx.Result {
	ret := _m.Called()

	var r0 ctx.Result
	if rf, ok := ret.Get(0).(func() ctx.Result); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ctx.Result)
		}
	}

	return r0
}
